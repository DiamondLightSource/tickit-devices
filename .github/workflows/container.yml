name: Container CI

on:
  push:
    branches:
      - master
      - main
  pull_request:
  release:
    types: [published]

jobs:
  build-and-push-image:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate image tags
        id: tagger
        run: |
          # tag is branch name or tag if there is a tag
          echo ::set-output name=image_tag::${GITHUB_REF##*/}
          echo ::set-output name=do_push::true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: |
            ~/cache
            !~/cache/exclude
          key: ${{ runner.os }}-tickit-devices-${{ github.sha }}
          restore-keys: ${{ runner.os }}-tickit-devices-

      - name: Log in to Github Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/tickit-devices
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Multi-stage build for test container
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.output.name }}
          push: false
          tags: user/tickit-devices:test
          target: runtime
          load: true
          cache-from: type=local,src=~/cache
          cache-to: type=local,dest=~/cache

      - name: Run multi-stage build (runtime container)
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.output.name }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.tagger.outputs.image_tag }}
          target: runtime
          cache-from: type=local,src=~/cache
          cache-to: type=local,dest=~/cache
